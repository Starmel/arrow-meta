proofs.kotlin=Kotlin
proofs.arrow=Î›rrow
proofs.coercion=Coercion
proofs.type.proofs=Type Proofs
proofs.coercions.inspection.explicit.args.static.description=Make coercion explicit for arguments
proofs.coercions.inspection.explicit.property.static.description=Make coercion explicit for properties
proofs.coercions.inspection.explicit.property.inspection.text=Not used at the moment because the highlight type used is ProblemHighlightType.INFORMATION
proofs.coercions.inspection.explicit.property.inspection.tool.description=<html><body>This inspection help us making the property coercions to be explicit</body></html>
proofs.coercions.inspection.implicit.static.description=Make coercion implicit
proofs.coercions.inspection.implicit.inspection.text="Expression: ''{0}'' can be replaced for only its receiver because there is a ''{1}''"
proofs.markers.proof.not.found=Proof not found
proofs.markers.coercion.message=<h2>Coercion</h2><p>Coercion happening by proof:</p><p><code lang="kotlin">''{0}''</code> is not a subtype of <code lang="kotlin">''{1}''</code>.. but there is a proof to go from: <code lang="kotlin">''{0}''</code> to <code lang="kotlin">''{1}''</code> :</p><p>Link to proof declaration: <code lang="kotlin">''{2}''</code></p>
inspection.static.description.no.description.provided=No inspection description provided
